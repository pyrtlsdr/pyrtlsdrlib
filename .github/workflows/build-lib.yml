name: Build librtlsdr

on:
  push:
    branches: ['pypi-test']
  workflow_dispatch:
    # inputs:
    #   allow_deploy:
    #     description: 'Deploy with twine'
    #     required: true
    #     type: boolean

jobs:
  build-linux:
    runs-on:
      ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: MatteoH2O1999/setup-python@v1
        with:
          python-version: '3.10.12'
          cache-build: true
          cache: 'pipenv'
      - name: Show Platform Info
        run: python -c "import platform;print(platform.uname())"

      - name: Install dependencies
        run: |
          sudo apt-get install -y libusb-1.0-0-dev
          python -m pip install pipenv
          pipenv install --dev

      - name: Build librtlsdr source
        run: pipenv run python tools/get_releases.py --build-types source
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test custom build
        run: pipenv run py.test tests/test_custom_build.py

      - name: Build wheel
        run: pipenv run python -m build -w
        env:
          PYRTLSDRLIB_PLATFORM: 'linux'
          PYRTLSDRLIB_ARCH: 'x86_64'

      - name: Audit Wheel
        run: |
          pipenv install auditwheel
          ls -alh dist
          auditwheel show dist/*
      - name: Repair Wheel
        run: |
          auditwheel repair dist/*
          ls -alh wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: 'dists'
          path: 'wheelhouse/*'


  build-other:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform-name: 'macos'
            arch: 'x86_64'
            bottle-tag: 'monterey'
          - os: macos-latest
            platform-name: 'macos'
            arch: 'arm64'
            bottle-tag: 'arm64_monterey'
          - os: windows-latest
            platform-name: win64
            arch: AMD64
    runs-on:
      ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: MatteoH2O1999/setup-python@v1
        with:
          python-version: '3.10.12'
          cache-build: true
          cache: 'pipenv'
      - name: Install libusb
        run: |
          brew uninstall --ignore-dependencies libusb
          brew fetch --force --bottle-tag $BOTTLE_TAG libusb
          export BOTTLE_PATH=$(brew --cache --bottle-tag=$BOTTLE_TAG libusb)
          brew install $BOTTLE_PATH
        if: ${{ matrix.platform-name == 'macos' }}
        env:
          BOTTLE_TAG: ${{ matrix.bottle-tag }}
      - name: Install pipenv
        run: python -m pip install pipenv
      - name: Update Pipfile.lock
        run: pipenv lock
        if: ${{ matrix.platform-name == 'win64' }}
      - name: Install dependencies
        run: pipenv install --dev

      # macos
      - name: Build librtlsdr source
        run: pipenv run python tools/get_releases.py --build-types source --macos-arch=$MACOS_ARCH
        if: ${{ matrix.platform-name != 'win64' }}
        env:
          MACOS_ARCH: ${{ matrix.arch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test custom build
        run: pipenv run py.test tests/test_custom_build.py
        if: ${{ matrix.platform-name != 'win64' }}
        env:
          MACOS_ARCH: ${{ matrix.arch }}

      # Windows
      - name: Get librtlsdr release
        run: pipenv run python tools/get_releases.py --build-types windows --build-types w32 --build-types w64 --build-types static
        if: ${{ matrix.platform-name == 'win64' }}

      - name: Test build
        run: pipenv run py.test tests/test_repo_build.py
        if: ${{ matrix.platform-name == 'win64' }}

      - name: Build win32 wheel
        run: pipenv run python -m build -w
        env:
          PYRTLSDRLIB_PLATFORM: 'win32'



      - name: Build wheel
        run: pipenv run python -m build -w
        env:
          PYRTLSDRLIB_PLATFORM: ${{ matrix.platform-name }}
          PYRTLSDRLIB_ARCH: ${{ matrix.arch }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: 'dists'
          path: 'dist/*'

  test:
    needs: [build-linux, build-other]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on:
      ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: pyrtlsdr/pyrtlsdr
          ref: rtlsdrlib-integration

      - name: Set up Python ${{ matrix.python-version }}
        uses: MatteoH2O1999/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          cache-build: true

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: 'dists'
          path: dist

      - name: Install dependencies
        run: |
          python -m pip install -U pip

      - name: Install pyrtlsdrlib from wheel
        run: pip install --no-index --find-links dist pyrtlsdrlib

      - name: Install pyrtlsdr
        run: pip install -e .

      - name: Test rtlsdr import
        run: python -c 'import rtlsdr;'


  deploy:
    needs: test
    # if: ${{ success() && (github.event.inputs.allow_deploy == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: 'dists'
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TEST_PASSWORD }}
          repository-url: https://test.pypi.org/legacy/
